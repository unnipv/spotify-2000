---
description: 
globs: 
alwaysApply: true
---
# Project Overview: Nostalgic Windows Media Player for Spotify

## Project Context
This project is building a nostalgic Windows Media Player-inspired desktop application that integrates with Spotify. The comprehensive project specification is documented in [TDD.md](mdc:TDD.md).

## Tech Stack Overview
- **Framework**: Tauri (Rust backend + React frontend)
- **Backend**: Rust 1.70+
- **Frontend**: React 18+ with TypeScript
- **State Management**: Zustand
- **Styling**: CSS Modules with SCSS
- **Audio**: Web Audio API + Rust audio libraries (rodio, cpal)
- **API Integration**: Spotify Web API

## Key Project Goals
1. **Nostalgic Authenticity**: Pixel-perfect recreation of early 2000s Windows Media Player UI
2. **Modern Performance**: Lightweight, fast, and cross-platform
3. **Spotify Integration**: Full integration with Spotify Web API and Playback SDK
4. **Learning Experience**: Code should be educational for someone new to Rust

## Project Phases
- **Phase 1** (Months 1-3): Foundation - Core infrastructure and essential features
- **Phase 2** (Months 4-6): Enhancement - Advanced features and polish
- **Post-Release**: Community features and long-term enhancements

## Development Approach
- Follow the detailed specifications in [TDD.md](mdc:TDD.md)
- Prioritize learning and code clarity over brevity
- Implement comprehensive testing at all levels
- Focus on cross-platform compatibility from day one

## Success Metrics
- Performance: <150MB memory, <5% CPU during playback
- User Experience: Sub-200ms UI response times
- Compatibility: Windows 10+, macOS 11+, Ubuntu 20.04+
